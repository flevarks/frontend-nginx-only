version: "3.7"
services:
 
  # postgres:
  #   container_name: postgres-alerts
  #   restart: unless-stopped
  #   image: postgres:latest
  #   command: postgres -c 'max_connections=250'
  #   environment:
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DB_NAME}
  #     PGDATA: /data/postgres
  #   volumes:
  #     - postgres:/data/postgres
  #   ports:
  #     - "0.0.0.0:${DB_PORT_EXT}:${DB_PORT_INT}"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U alerts -d alerts"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - alerts
 
  # memcached:
  #   image: memcached:latest
  #   container_name: memcached-alerts
  #   restart: unless-stopped
  #   command: memcached -I 50m -m 256
  #   ports:
  #     - "127.0.0.1:11211:11211"
  #   networks:
  #     - alerts
 
  # backend:
  #   # build:
  #   #   context: .
  #   #   dockerfile: backend/Dockerfile
  #   image: iti-gitlab.iti.gr:5050/ceasefire/alerts/alerts-backend:1.0.0
  #   container_name: backend-alerts
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     - MODE=${MODE}
  #     - WP6_USER=${WP6_USER}
  #     - WP6_PASSWORD=${WP6_PASSWORD}
  #     - WP6_HOST=${WP6_HOST}
  #     - WP6_PORT=${WP6_PORT}
  #     - WP6_NAME=${WP6_NAME}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT_EXT=${DB_PORT_EXT}
  #     - DB_PORT_INT=${DB_PORT_INT}
  #     - DB_NAME=${DB_NAME}
  #   volumes:
  #     - ./backend/app/files:/app/app/files
  #   ports:
  #     - "0.0.0.0:${BACK_FM_PORT}:${BACK_FM_PORT}"
  #   networks:
  #     - alerts
 
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: frontend/Dockerfile
  #   container_name: frontend-alerts
  #   restart: unless-stopped
  #   ports:
  #     - "0.0.0.0:14000:14000"
  #   networks:
  #    - alerts
 
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "5173:80"
    restart: unless-stopped
    volumes:
      - ./distVDockerHarbor2:/var/www/html
      - ./nginx:/etc/nginx/conf.d
    networks:
      - alerts
 
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do rm -rf /etc/letsencrypt/renewal/*-0001.conf; certbot renew; sleep 24h & wait $${!}; done;'"
 
networks:
  alerts:
    driver: bridge